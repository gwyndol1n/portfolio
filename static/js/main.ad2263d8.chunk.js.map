{"version":3,"sources":["components/TiltComponent.js","components/TiltWrapperComponent.js","components/header/HeaderComponent.js","App.js","reportWebVitals.js","index.js"],"names":["TiltComponent","_ref","content","className","glareColor","perspective","scale","restProps","React","createElement","Tilt","glareEnable","gyroscope","style","fontSize","TiltWrapperComponent","contentToRender","split","map","char","index","key","HeaderComponent","el","i","App","id","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"sSAoBeA,MAhBOC,IAA+H,IAA9HC,QAACA,EAAU,GAAEC,UAAEA,EAAY,iBAAgBC,WAAEA,EAAa,gBAAeC,YAAEA,EAAc,IAAGC,MAAEA,EAAQ,QAASC,GAAUN,EAC5I,OACIO,IAAAC,cAACC,IAAI,CACDP,UAAWA,EACXQ,aAAa,EACbL,MAAOA,EACPD,YAAaA,EACbO,WAAW,EACXR,WAAYA,GACRI,IAAAC,cAAA,OAAKN,UAAU,gBAAgBU,MAAO,CAACC,SAAUP,EAAoB,WACjEC,IAAAC,cAAA,WAAMP,YCAXa,MARcd,IAAuC,IAAtCC,QAACA,EAAU,GAAEY,SAAEA,EAAW,QAAOb,EAC3D,MAAMe,EAAkBd,EAAQe,MAAM,IAAIC,IAAI,CAACC,EAAMC,IAAUZ,IAAAC,cAACT,EAAa,CAACE,QAASiB,EAAML,SAAUA,EAAUO,IAAKD,KAEtH,OACIZ,IAAAC,cAAA,OAAKN,UAAU,gCAAgCa,UCUxCM,MAhBSrB,IAAuC,IAAtCC,QAACA,EAAU,GAAEY,SAAEA,EAAW,QAAOb,EACtD,OACIO,IAAAC,cAAA,OAAKN,UAAU,qBASVD,EAAQe,MAAM,KAAKC,IAAI,CAACK,EAAIC,IAAMhB,IAAAC,cAACM,EAAoB,CAACb,QAASqB,EAAIT,SAAUA,EAAUO,IAAKG,OCF5FC,MATf,WACE,OACEjB,IAAAC,cAAA,OAAKiB,GAAG,aAAavB,UAAU,aAC7BK,IAAAC,cAACa,EAAe,CAACpB,QAAS,cAC1BM,IAAAC,cAACa,EAAe,CAACpB,QAAS,YAAaY,SAAU,WCIxCa,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK/B,IAAiD,IAAhDiC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASrC,EACpEiC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnC,IAAAC,cAACD,IAAMoC,WAAU,KACfpC,IAAAC,cAACgB,EAAG,QAORE","file":"static/js/main.ad2263d8.chunk.js","sourcesContent":["import React from 'react'\r\nimport Tilt from \"react-parallax-tilt\";\r\nimport \"./TiltComponent.css\";\r\n\r\nconst TiltComponent = ({content = \"\", className = \"tilt-component\", glareColor = \"rgb(10,10,10)\", perspective = 500, scale = 1.02, ...restProps}) => {\r\n    return (\r\n        <Tilt\r\n            className={className}\r\n            glareEnable={false}\r\n            scale={scale}\r\n            perspective={perspective}\r\n            gyroscope={true}\r\n            glareColor={glareColor}>\r\n                <div className=\"inner-element\" style={{fontSize: restProps['fontSize']}}>\r\n                    <div>{content}</div>\r\n                </div>\r\n        </Tilt>\r\n    )\r\n}\r\n\r\nexport default TiltComponent;","import React from \"react\";\r\nimport TiltComponent from \"./TiltComponent\";\r\nimport \"./TiltWrapperComponent.css\"\r\n\r\n/* maps over string to produce character tiles */\r\n\r\nconst TiltWrapperComponent = ({content = \"\", fontSize = \"60px\"}) => {\r\n    const contentToRender = content.split(\"\").map((char, index) => <TiltComponent content={char} fontSize={fontSize} key={index}/>)\r\n\r\n    return (\r\n        <div className=\"tilt-wrapper first-animation\">{contentToRender}</div>\r\n    )\r\n}\r\n\r\nexport default TiltWrapperComponent;","import React from 'react';\r\nimport TiltWrapperComponent from '../TiltWrapperComponent';\r\nimport './HeaderComponent.css';\r\n\r\nconst HeaderComponent = ({content = \"\", fontSize = \"60px\"}) => {\r\n    return (\r\n        <div className='content-container'>\r\n            {/* <div className='layer-2'>\r\n                <div className='static second-animation' />\r\n            </div>\r\n            <div className='layer-1'>\r\n                <div className='static first-animation'>\r\n                    {content.split(\" \").map((el, i) => <TiltWrapperComponent content={el} fontSize={fontSize} key={i}/>)}\r\n                </div>\r\n            </div> */}\r\n            {content.split(\" \").map((el, i) => <TiltWrapperComponent content={el} fontSize={fontSize} key={i}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;","import React from 'react';\nimport './App.css';\nimport HeaderComponent from './components/header/HeaderComponent';\n\nfunction App() {\n  return (\n    <div id=\"background\" className='container'>\n      <HeaderComponent content={\"gwyn moon\"}/>\n      <HeaderComponent content={\"developer\"} fontSize={'30px'}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}